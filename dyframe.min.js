/*!
 * Dyframe
 * @version 0.2.0
 * @link https://github.com/htanjo/dyframe
 * @author Tanjo, Hiroyuki
 * @license MIT
 */
!function(t,e,i){"use strict";var o={tablet:768,smartphone:375},r=980,n="df-",s={html:"",width:r,profile:""},p=function(t,i){this.element=t,this.wrapper=e.createElement("div"),this.viewport=e.createElement("iframe"),d(this.element,n+"element"),h(this.wrapper,{position:"relative",display:"block",height:0,padding:0,overflow:"hidden"}),h(this.viewport,{position:"absolute",top:0,left:0,bottom:0,height:"100%",width:"100%",border:0,webkitTransformOrigin:"0 0",msTransformOrigin:"0 0",transformOrigin:"0 0"}),this.wrapper.appendChild(this.viewport),this.element.appendChild(this.wrapper),this.render(i||{})};p.prototype.render=function(t){"object"==typeof t&&this.updateOptions(t),this.updateClass();var e=c(this.element);this.width=e.width,this.height=e.height,this.wrapper.style.paddingBottom=this.height+"px",this.scale(),this.viewport.contentWindow.document.open(),this.viewport.contentWindow.document.write(this.options.html),this.viewport.contentWindow.document.close()},p.prototype.updateOptions=function(t){return this.options?void a(this.options,t):void(this.options=a({},s,t))},p.prototype.hasActiveProfile=function(){return this.options.profile&&o[this.options.profile]},p.prototype.updateClass=function(){l(this.element,n+"width-"),l(this.element,n+"profile-"),this.hasActiveProfile()?d(this.element,n+"profile-"+this.options.profile):d(this.element,n+"width-"+this.options.width)},p.prototype.scale=function(){var t=this.width/this.getPreviewWidth();h(this.viewport,{width:100/t+"%",height:100/t+"%",webkitTransform:"scale("+t+")",msTransform:"scale("+t+")",transform:"scale("+t+")"})},p.prototype.getPreviewWidth=function(){if(!this.hasActiveProfile())return this.options.width;var t=this.getViewportData(),e=t.width;return e?"device-width"===e?o[this.options.profile]:parseInt(e,10):r},p.prototype.getViewportData=function(){var t,i,o=e.createElement("div"),r={};return o.innerHTML=this.options.html,(t=o.querySelector('meta[name="viewport"]'))&&(i=t.getAttribute("content"))?(i.split(",").forEach(function(t){var e=t.trim().split("=");e[0]&&e[1]&&(r[e[0].trim()]=e[1].trim())}),r):r};var a=function(){var t,e,i=arguments[0];for(t=1;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&(i[e]=arguments[t][e]);return i},h=function(t,e){var i;for(i in e)t.style[i]=e[i]},d=function(t,e){t.classList?t.classList.add(e):t.className+=" "+e},l=function(t,e){var i=new RegExp("(^|\\s)"+e+"\\S+","g");t.className=t.className.replace(i,"")},c=function(e){var i=t.getComputedStyle(e),o=parseInt(i.getPropertyValue("padding-top"),0),r=parseInt(i.getPropertyValue("padding-left"),0),n=parseInt(i.getPropertyValue("padding-right"),0),s=parseInt(i.getPropertyValue("padding-bottom"),0),p={width:e.clientWidth-(r+n),height:e.clientHeight-(o+s)};return p};"function"==typeof define&&define.amd?define("dyframe",[],function(){return p}):"object"==typeof module&&module.exports?module.exports=p:t.Dyframe=p}(window,document);